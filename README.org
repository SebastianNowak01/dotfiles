#+title: ACER NITRO AN515-55 Laptop Arch Linux configuration
#+author: sebnow91

* :TOC:
- [[#introduction][Introduction]]
- [[#laptops-hardware][Laptop's hardware]]
- [[#installation-process][Installation process]]
- [[#basic-packages-and-dotfiles][Basic packages and dotfiles]]
  - [[#fonts][Fonts]]
  - [[#doom-emacs][DOOM Emacs]]
  - [[#dotfiles][Dotfiles]]
  - [[#getting-device-names-for-config][Getting device names for config]]
  - [[#packages-needed-for-my-dotfiles-to-work][Packages needed for my dotfiles to work]]
- [[#changes-not-included-in-dotfiles][Changes not included in dotfiles]]
  - [[#turning-off-pcspeaker][Turning off PCspeaker]]
  - [[#making-boot-silent][Making boot silent]]
  - [[#tlp][TLP]]
  - [[#grub-theme][GRUB Theme]]
  - [[#dualboot][Dualboot]]
  - [[#set-x11-keyboard-layout-swap-capslock-with-left-ctrl][Set X11 keyboard layout (Swap CapsLock with left Ctrl)]]
  - [[#set-cursor-theme][Set cursor theme]]
  - [[#time-discrepancy-between-windows-and-gnulinux][Time discrepancy between Windows and GNU\Linux]]
  - [[#hardware-acceleration-and-setting-up-two-graphics-cards][Hardware acceleration and setting up two graphics cards]]
- [[#doom-emacs-config][DOOM Emacs config]]

* Introduction
In my dotfiles I implemented this general Arch Linux installation guide in case I have to install it again in the future.
There are tutorials I used to install the OS I currently use. This guide helps with not only how to make Arch Linux working with dotfiles
included below but also helps with things that help using this OS easier i.e. X11 keyboard layout, turning off PCSpeaker, how to mount an EFI partition
for os-prober to dualboot or making boot silent.

* Laptop's hardware

| GPU (hybrid) | CPU       | RAM       | SSD                 | Monitor                       |
|--------------+-----------+-----------+---------------------+-------------------------------|
| GTX1650+iGPU | i5-10300H | 16GB DDR4 | 256GB M.2 PCIe NVMe | built-in 144Hz fullHD monitor |

* Installation process
To install Arch Linux you can simply follow DistroTube's Arch Linux Installation Guide (for UEFI systems):
[[https://www.youtube.com/watch?v=PQgyW10xD8s&t=1675s]]

* Basic packages and dotfiles
Some basic packages will be downloaded if you follow aforementioned Arch Linux Install Guide and another DT's
tutorial for installing graphical environment:
[[https://www.youtube.com/watch?v=pouX5VvX0_Q&t=1139s
]]
** Fonts
On my setup I use font packages below. They help to show emojis in firefox or discord, and things like japanese alphabet.
pacman -S has to be run with *root privileges*.
#+BEGIN_EXAMPLE
pacman -S pacman -S noto-fonts-cjk noto-fonts-emoji noto-fonts
#+END_EXAMPLE
I also use some font packages from AUR.
#+BEGIN_EXAMPLE
yay -S ttf-freefont ttf-ms-fonts ttf-linux-libertine ttf-dejavu ttf-inconsolata ttf-ubuntu-font-family
#+END_EXAMPLE

** DOOM Emacs
*IMPORTANT!* It is recommended to install DOOM Emacs before copying dotfiles below to ~/.config, because there is a path to DOOM Emacs
that breaks fish if Emacs, and subseqently DOOM Emacs is not installed. To install DOOM Emacs I used DistroTube's tutorial:
https://www.youtube.com/watch?v=37H7bD-G7nE&t=641s
You can also enable emacs daemon with systemd:
#+BEGIN_EXAMPLE
systemctl enable --user emacs
systemctl start --user emacs
#+END_EXAMPLE
For more info you can visit:
https://www.emacswiki.org/emacs/EmacsAsDaemon

** Dotfiles
My dotfiles can be found here:
https://gitlab.com/sebnow91/dotfiles

** Getting device names for config
To get touchpad name you can simply run *xinput* command. To get your wifi and ethernet device names you can use *ip link* command.
These name are needed in some of my config files.

** Packages needed for my dotfiles to work
This is a list of packages from official Arch Linux repository needed for my dotfiles to work:

-alacritty (terminal)

-brightnessctl (a tool to manage backlight)

-exa (ls replacement)

-fish (commandline shell)

-flameshot (GUI screenshot utility)

-i3-gaps (window manager)

-mpv (media player)

-neovim (vim replacement)

-network-manager-applet (network applet for polybar)

-nitrogen (GUI desktop background server and setter for X Window)

-pacman-contrib (scripts and tools for pacman systems)

-picom (compositor)

-polybar (status bar)

-pulseaudio (general studio sound server)

-rofi (window switcher, run dialog, ssh-launcher and dmenu replacement)

-ttf-font-awesome (fonts used in my dotfiles)

The command below is written for convenience to download needed packages and must be run with *root privileges*:
#+BEGIN_EXAMPLE
pacman -S alacritty brightnessctl exa fish flameshot i3-gaps mpv neovim network-manager-applet nitrogen pacman-contrib picom polybar pulseaudio rofi ttf-font-awesome
#+END_EXAMPLE

* Changes not included in dotfiles

*DISCLAIMER!!!* Most actions performed below were checked and mostly done with the help of ArchWiki:
https://wiki.archlinux.org/

** Turning off PCspeaker
I globally disabled PCspeaker by unloading pcspkr kernel module:
#+BEGIN_EXAMPLE
# rmmod pcspkr
#+END_EXAMPLE
And then blacklisting the *pcspkr* module:
#+BEGIN_EXAMPLE
/etc/modprobe.d/nobeep.conf

blacklist pcspkr
#+END_EXAMPLE

** Making boot silent
This line should be added to the end of the /etc/default/grub file to hide all the logs when loading to OS.
This method works if you use GRUB as your bootloader.
#+BEGIN_EXAMPLE
GRUB_CMDLINE_LINUX_DEFAULT="quiet loglevel=3"
#+END_EXAMPLE
After the change you have to update the grub config with the command
#+BEGIN_EXAMPLE
grub-mkconfig -o /boot/grub/grub.cfg
#+END_EXAMPLE

** TLP
As a laptop user you can download TLP package to better manage battery life. This service has to be enabled and started to work.

** GRUB Theme
To have a nice looking GRUB menu you can download one of many GRUB themes available online. I use Grub-theme-stylish made by vinceliuice:
https://www.gnome-look.org/p/1009237

Theme installation is explained by the author of the theme. To unpack tar files I used this tutorial:
https://linuxize.com/post/how-to-extract-unzip-tar-xz-file/

** Dualboot
If you have a dualboot system then you have to add EFI partitions of your other operation systems and write them to /etc/fstab. To know what partition
to add to your fstab file run *blkid* command with *root privileges*. Partition has to be mounted in order for this to work. You should know how to mount
a partition after watching DT(DistroTube)'s Arch Linux Installation Guide. Example fstab entry for an EFI partition looks like this:
#+BEGIN_EXAMPLE
UUID=*EFI partition UUID*  /mnt    vfat    defaults        0 0
#+END_EXAMPLE
*ALERT!* You have to mount to the location as you have written in the /etc/fstab file.
Lastly, you have to make your GRUB config again, same as in *Making boot silent* section.

** Set X11 keyboard layout (Swap CapsLock with left Ctrl)
To set X11 keyboard layout you can use *localectl* to check what is your keyboard layout and then set it with:
#+BEGIN_EXAMPLE
localectl set-x11-keymap pl "" "" ctrl:swapcapsS
#+END_EXAMPLE

** Set cursor theme
https://store.kde.org/p/1269768
I chose this theme (Dodger Blue variant) because it contrasts nicely with my DOOM Emacs theme (gruvbox).
You have to follow the installation instructions and then if, you want this for all users,
you have to change /usr/share/icons/default/index.theme and set the theme to your preffered one.

** Time discrepancy between Windows and GNU\Linux
There might be a difference in time when using dualboot between operating systems. To fix time on GNU\Linux you
can type following command:
#+BEGIN_EXAMPLE
timedatectl set-ntp true
#+END_EXAMPLE
On Windows you can simply follow this guide:
https://support.microsoft.com/en-us/windows/how-to-set-your-time-and-time-zone-dfaa7122-479f-5b98-2a7b-fa0b6e01b261
** Hardware acceleration and setting up two graphics cards
To enable hardware acceleration you need to have video drivers installed. For this laptop the needed video drivers are: xf86-video-intel and nvidia.
To enable hardware aceeleration in firefox (my default browser) I followed this guide:
https://www.youtube.com/watch?v=tpy9yws-J2I&t=463s
To set up NVIDIA Optimus I used this guide:
https://www.youtube.com/watch?v=jncc3QL8RWI
Some steps were unclear in the documentation so they are explained below.

*** Xinit optimus-manager configuration
I use xorg-xinit to start my X session, so to make optimus-manager working I found this guide:
https://dev.to/snikhill/optimus-manager-on-arch-linux-1589
You simply add lines below before any graphical environment related commands (compositor, window manager):
#+BEGIN_SRC bash
if [[[[ -f /usr/bin/prime-offload ]]]]; then
    /usr/bin/prime-offload
fi
#+END_SRC
Then, after your graphical environment command you add these lines:
#+BEGIN_SRC bash
if [[ -f /usr/bin/prime-switch ]]; then
    sudo /usr/bin/prime-switch
fi
#+END_SRC

*** User configuration file
Optimus-manager config file has to be created in /etc/optimus-manager and named as optimus-manager.conf. My whole config for this laptop looks like this:
#+BEGIN_EXAMPLE
[nvidia]
dynamic_power_management=fine
#+END_EXAMPLE
It is *Configuration 1* mentioned in this offical optimus-manager guide:
https://github.com/Askannz/optimus-manager/wiki/A-guide--to-power-management-options

*** Runtime D3 status: Disabled by default
From this guide:
[[https://download.nvidia.com/XFree86/Linux-x86_64/435.17/README/dynamicpowermanagement.html]]
In the section *Automated Setup* I followed the 2. point there. I added *options nvidia "NV_regDynamicPowerManagement=0x02"*
in /etc/modprobe.d/nvidia.conf file (this file had to be created). After rebooting and calling *cat /proc/driver/nvidia/gpus/0000:01:00.0/power*
that was the result:
#+BEGIN_EXAMPLE
Runtime D3 status:          Enabled (fine-grained)
Video Memory:               Off

GPU Hardware Support:
 Video Memory Self Refresh: Supported
 Video Memory Off:          Supported

Power Limits:
 Default:                   N/A milliwatts
 GPU Boost:                 N/A milliwatts
#+END_EXAMPLE

* DOOM Emacs config
These commands should be pasted into ~/.doom.d/config.el. They help me configure DOOM Emacs to my liking:
#+BEGIN_SRC elisp
(beacon-mode 1) ;requires (!package beacon) in ~/.doom.d/packages.el ;enables beacon
(set-face-attribute 'default nil :height 140) ;allows to change font size :height takes argument as pixels/10, so this is 14px font-size
(define-key evil-insert-state-map (kbd "TAB") 'tab-to-tab-stop) ;with this I do not have to click tab twice to indent text
#+END_SRC
